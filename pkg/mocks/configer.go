// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/types/config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "github.com/cloudcloud/roadie/pkg/types"
	gomock "github.com/golang/mock/gomock"
)

// MockConfiger is a mock of Configer interface.
type MockConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockConfigerMockRecorder
}

// MockConfigerMockRecorder is the mock recorder for MockConfiger.
type MockConfigerMockRecorder struct {
	mock *MockConfiger
}

// NewMockConfiger creates a new mock instance.
func NewMockConfiger(ctrl *gomock.Controller) *MockConfiger {
	mock := &MockConfiger{ctrl: ctrl}
	mock.recorder = &MockConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfiger) EXPECT() *MockConfigerMockRecorder {
	return m.recorder
}

// GetConfigFile mocks base method.
func (m *MockConfiger) GetConfigFile() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigFile")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetConfigFile indicates an expected call of GetConfigFile.
func (mr *MockConfigerMockRecorder) GetConfigFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigFile", reflect.TypeOf((*MockConfiger)(nil).GetConfigFile))
}

// GetHostname mocks base method.
func (m *MockConfiger) GetHostname() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostname")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHostname indicates an expected call of GetHostname.
func (mr *MockConfigerMockRecorder) GetHostname() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostname", reflect.TypeOf((*MockConfiger)(nil).GetHostname))
}

// GetListener mocks base method.
func (m *MockConfiger) GetListener() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListener")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetListener indicates an expected call of GetListener.
func (mr *MockConfigerMockRecorder) GetListener() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListener", reflect.TypeOf((*MockConfiger)(nil).GetListener))
}

// GetLogger mocks base method.
func (m *MockConfiger) GetLogger() types.Logger {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogger")
	ret0, _ := ret[0].(types.Logger)
	return ret0
}

// GetLogger indicates an expected call of GetLogger.
func (mr *MockConfigerMockRecorder) GetLogger() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogger", reflect.TypeOf((*MockConfiger)(nil).GetLogger))
}
