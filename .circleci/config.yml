aliases:
  - &default-env
    GO111MODULE: "on"
    PROJECT: "roadie"

  - &working-dir
    /go/roadie

  - &workspace-persist
    root: /go/
    paths:
      - roadie
      - bin
      - pkg
      - src

orbs:
  docker: circleci/docker@1.5.0

version: 2.1
jobs:
  build:
    environment: *default-env
    working_directory: *working-dir
    docker:
      - image: golang:1.15-buster
    steps:
      - checkout
      - run:
          name: Prep Local
          command: |
            go mod download
            GO111MODULE=off go get -u github.com/kevinburke/go-bindata/...
            GO111MODULE=off go get -u github.com/tcnksm/ghr
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /go/bin/cc-test-reporter
            chmod +x /go/bin/cc-test-reporter
      - persist_to_workspace: *workspace-persist

  fe:
    environment: *default-env
    working_directory: *working-dir
    docker:
      - image: node:slim
    steps:
      - attach_workspace:
          at: /go/
      - run:
          name: Build the frontend
          command: |
            yarn && NODE_OPTIONS=--openssl-legacy-provider yarn build
      - persist_to_workspace: *workspace-persist

  be-compile:
    environment: *default-env
    working_directory: *working-dir
    docker:
      - image: golang:1.15-buster
    steps:
      - attach_workspace:
          at: /go/
      - run:
          name: Compile backend
          command: |
            go-bindata -o ./pkg/server/assets.go -pkg server -prefix dist/ dist/...
      - persist_to_workspace: *workspace-persist

  be-tests:
    environment: *default-env
    working_directory: *working-dir
    docker:
      - image: golang:1.15-buster
    steps:
      - attach_workspace:
          at: /go/
      - run:
          name: Test backend
          command: |
            cc-test-reporter before-build
            go test -coverprofile=c.out -covermode=atomic -race ./...
            RESULT=$?
            sed -i s#github.com/cloudcloud/${PROJECT}/## c.out
            sed -i '/^pkg\/server\/assets.go.*/d' c.out
            cc-test-reporter after-build -t gocov --exit-code $RESULT
      - store_artifacts:
          path: c.out
          destination: test-coverage
      - persist_to_workspace: *workspace-persist

  images:
    environment: *default-env
    working_directory: *working-dir
    docker:
      - image: golang:1.15-buster
    steps:
      - attach_workspace:
          at: /go/
      - run:
          name: Prepare assets
          command: go-bindata -o pkg/server/assets.go -pkg server -prefix dist/ dist/...
      - run:
          name: Build amd64-linux
          environment:
            GOARCH: amd64
            GOOS: linux
            PROJECT: roadie
          command: go build -o build/${PROJECT}.${GOARCH}-${GOOS} ./cmd/${PROJECT}
      - run:
          name: Build amd64-darwin
          environment:
            GOARCH: amd64
            GOOS: darwin
            PROJECT: roadie
          command: go build -o build/${PROJECT}.${GOARCH}-${GOOS} ./cmd/${PROJECT}
      - run:
          name: Build amd64-windows
          environment:
            GOARCH: amd64
            GOOS: windows
            PROJECT: roadie
          command: go build -o build/${PROJECT}.${GOARCH}-${GOOS}.exe ./cmd/${PROJECT}
      - run:
          name: Build 386-linux
          environment:
            GOARCH: '386'
            GOOS: linux
            PROJECT: roadie
          command: go build -o build/${PROJECT}.${GOARCH}-${GOOS} ./cmd/${PROJECT}
      - run:
          name: Build 386-windows
          environment:
            GOARCH: '386'
            GOOS: windows
            PROJECT: roadie
          command: go build -o build/${PROJECT}.${GOARCH}-${GOOS}.exe ./cmd/${PROJECT}
      - run:
          name: Push to github
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./build/
      - store_artifacts:
          path: build
          destination: binaries
      - persist_to_workspace: *workspace-persist

workflows:
  version: 2

  roadie:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - fe:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - be-compile:
          requires:
            - fe
          filters:
            tags:
              only: /.*/

      - be-tests:
          requires:
            - be-compile
          filters:
            tags:
              ignore: /.*/

      - images:
          requires:
            - be-compile
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - docker/publish:
          cache_from: '$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest'
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
          tag: pr${CIRCLE_PR_NUMBER}-${CIRCLE_BUILD_NUM}
          requires:
            - build
          filters:
            tags:
              ignore: /.*/

      - docker/publish:
          cache_from: '$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest'
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
          tag: latest,$CIRCLE_TAG
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

